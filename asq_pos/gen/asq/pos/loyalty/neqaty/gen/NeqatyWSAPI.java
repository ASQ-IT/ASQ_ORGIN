
package asq.pos.loyalty.neqaty.gen;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * Mobily NeqatyWSAPI
 * 
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "NeqatyWSAPI", targetNamespace = "urn:margento", wsdlLocation = "../asq_pos/res/wsdl/neqaty")
public class NeqatyWSAPI extends Service {
	private final static URL NEQATYWSAPI_WSDL_LOCATION;
	private final static WebServiceException NEQATYWSAPI_EXCEPTION;
	private final static QName NEQATYWSAPI_QNAME = new QName("urn:margento", "NeqatyWSAPI");

	static {
		NEQATYWSAPI_WSDL_LOCATION = asq.pos.loyalty.neqaty.gen.NeqatyWSAPI.class.getResource("../asq_pos/res/wsdl/neqaty");
		WebServiceException e = null;
		if (NEQATYWSAPI_WSDL_LOCATION == null) {
			e = new WebServiceException("Cannot find '../asq_pos/res/wsdl/neqaty' wsdl. Place the resource correctly in the classpath.");
		}
		NEQATYWSAPI_EXCEPTION = e;
	}

	public NeqatyWSAPI() {
		super(__getWsdlLocation(), NEQATYWSAPI_QNAME);
	}

	public NeqatyWSAPI(WebServiceFeature... features) {
		super(__getWsdlLocation(), NEQATYWSAPI_QNAME, features);
	}

	public NeqatyWSAPI(URL wsdlLocation) {
		super(wsdlLocation, NEQATYWSAPI_QNAME);
	}

	public NeqatyWSAPI(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, NEQATYWSAPI_QNAME, features);
	}

	public NeqatyWSAPI(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public NeqatyWSAPI(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns NeqatyWSAPIPortType
	 */
	@WebEndpoint(name = "NeqatyWSAPI")
	public NeqatyWSAPIPortType getNeqatyWSAPI() {
		return super.getPort(new QName("urn:margento", "NeqatyWSAPI"), NeqatyWSAPIPortType.class);
	}

	/**
	 * 
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *                 on the proxy. Supported features not in the
	 *                 <code>features</code> parameter will have their default
	 *                 values.
	 * @return returns NeqatyWSAPIPortType
	 */
	@WebEndpoint(name = "NeqatyWSAPI")
	public NeqatyWSAPIPortType getNeqatyWSAPI(WebServiceFeature... features) {
		return super.getPort(new QName("urn:margento", "NeqatyWSAPI"), NeqatyWSAPIPortType.class, features);
	}

	private static URL __getWsdlLocation() {
		if (NEQATYWSAPI_EXCEPTION != null) {
			throw NEQATYWSAPI_EXCEPTION;
		}
		return NEQATYWSAPI_WSDL_LOCATION;
	}
}
