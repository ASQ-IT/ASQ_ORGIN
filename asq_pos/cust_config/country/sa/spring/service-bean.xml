<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
  profile="xstore">
  
  <bean id="asqZatcaHelper" class="asq.pos.zatca.cert.generation.AsqZatcaHelper"/>
  <bean id="asqZatcaInvoiceGenerationHelper" class="asq.pos.zatca.invoice.generation.op.AsqZatcaInvoiceGenerationHelper"/>
  <bean id="asqZatcaCertRegistrationServices" class="asq.pos.zatca.cert.generation.service.AsqZatcaCertRegistrationServicesImpl" primary="true"/>     
  
  <bean abstract="true" id="AbstractZatcaRestServiceBean">
    <property name="serviceId" value="ZATCA_CERT_REST" />
    <property name="exceptionHandler" ref="standardJaxRsExceptionHandler" />
    <property name="serviceConfigHelper" ref="serviceConfigHelper" />
    <!-- <property name="extensionProviders">
      <list value-type="java.lang.Object">
        <bean class="dtv.servicex.impl.GzipReaderInterceptor" />
        should only be present if using cloud
        <bean class="dtv.servicex.impl.AuthorizationFilter" />
        
      </list>
    </property>
    <property name="gzip" value="true" /> -->
    <property name="logEntity" value="false" />
    <property name="oAuth2" value="false" />
    <property name="username" value="${xcenter.db.user}" />
    <property name="password" value="${xcenter.db.pwd}" />
  </bean> 
  
  
  <bean id="ZATCA_CERT_GEN_SRV" class="asq.pos.zatca.cert.generation.service.AsqZatcaCertRegistrationServiceHandler" parent="AbstractZatcaRestServiceBean">
    <property name="servicePath" value="/compliance" />
  </bean> 
  
  <bean id="ZATCA_CERT_GEN_INVOICE_SRV" class="asq.pos.zatca.cert.generation.service.AsqZatcaCertRegistrationServiceHandler" parent="AbstractZatcaRestServiceBean">
    <property name="servicePath" value="/compliance/invoices" />
  </bean> 
  
  <bean id="ZATCA_CERT_CSIDS_SRV" class="asq.pos.zatca.cert.generation.service.AsqZatcaCertRegistrationServiceHandler" parent="AbstractZatcaRestServiceBean">
    <property name="servicePath" value="/production/csids" />
  </bean> 
  
  <bean abstract="true" id="AbstractSTCRestServiceBean">
    <property name="serviceId" value="STC_REST" />
    <property name="exceptionHandler" ref="standardJaxRsExceptionHandler" />
    <property name="serviceConfigHelper" ref="serviceConfigHelper" />
    <!-- <property name="extensionProviders">
      <list value-type="java.lang.Object">
        <bean class="dtv.servicex.impl.GzipReaderInterceptor" />
        should only be present if using cloud
        <bean class="dtv.servicex.impl.AuthorizationFilter" />
        
      </list>
    </property>
    <property name="gzip" value="true" /> -->
    <property name="logEntity" value="false" />
    <property name="oAuth2" value="false" />
    <property name="username" value="${xcenter.db.user}" />
    <property name="password" value="${xcenter.db.pwd}" />
  </bean> 
  
  <bean id="ASQ_STC_TENDER_SERVICE" class="asq.pos.loyalty.stc.tender.service.AsqSTCloyaltyServiceHandler" parent="AbstractSTCRestServiceBean">
    <!-- <property name="serviceOTPPath" value="/api/v1/redemption/otp" />
    <property name="serviceRedeemPath" value="/api/v1/redemption/redeem" />
    <property name="serviceRedeemReversePath" value="/api/v1/redemption/reverse" />
    <property name="serviceEarnPath" value="/api/v1/earn/reward" /> -->
<!-- 	<property name="secretToken" value="addad" />
	<property name="authorization" value="addad" /> -->
  </bean> 
  
</beans>
  