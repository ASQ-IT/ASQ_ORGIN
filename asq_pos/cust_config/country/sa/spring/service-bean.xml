<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
  profile="xstore">
  
  <bean id="asqZatcaHelper" class="asq.pos.zatca.cert.generation.AsqZatcaHelper"/>
  <bean id="asqStcHelper" class="asq.pos.loyalty.stc.tender.AsqStcHelper"/>
  <bean id="asqZatcaDatabaseHelper" class="asq.pos.zatca.database.helper.AsqZatcaDatabaseHelper"/>
  <bean id="asqZatcaInvoiceGenerationHelper" class="asq.pos.zatca.invoice.generation.op.AsqZatcaInvoiceGenerationHelper"/>
  <bean id="asqZatcaCertRegistrationServices" class="asq.pos.zatca.cert.generation.service.AsqZatcaCertRegistrationServicesImpl" primary="true"/>     
  <bean id="asqZatcaToOICServices" class="asq.pos.zatca.invoice.submition.worker.service.AsqZatcaInvoiceSubmittToOICServiceImpl"/>
  
  <bean id="asqBnplTamaraServices" class=" asq.pos.bnpl.tamara.tender.service.AsqBnplTamaraServicesImpl"/>
  <bean id="asqSTCLoyalityTenderService" class="asq.pos.loyalty.stc.tender.service.AsqSTCTenderServiceImpl"/>
  
  <bean id="asqNeqatyHelper" class="asq.pos.loyalty.neqaty.tender.service.AsqNeqatyHelper"/>
  <bean id="asqNeqatyService" class="asq.pos.loyalty.neqaty.tender.service.AsqNeqatyServiceImpl"/>
  
  <bean abstract="true" id="AbstractZatcaRestServiceBean">
    <property name="serviceId" value="ZATCA_CERT_REST" />
    <property name="exceptionHandler" ref="standardJaxRsExceptionHandler" />
    <property name="serviceConfigHelper" ref="serviceConfigHelper" />
    <property name="logEntity" value="false" />
    <property name="oAuth2" value="false" />
    <property name="username" value="${xcenter.db.user}" />
    <property name="password" value="${xcenter.db.pwd}" />
  </bean> 
  
  <bean abstract="true" id="AbstractZatcaOICRestServiceBean">
    <property name="serviceId" value="ZATCA_OIC_REST" />
    <property name="exceptionHandler" ref="standardJaxRsExceptionHandler" />
    <property name="serviceConfigHelper" ref="serviceConfigHelper" />
    <property name="logEntity" value="false" />
    <property name="oAuth2" value="false" />
    <property name="username" value="${asq.zatca.oic.invoice.user.name}" />
    <property name="password" value="${asq.zatca.oic.invoice.user.password}" />
  </bean> 
  
  <bean id="ZATCA_OIC_SRV" class="asq.pos.zatca.invoice.submition.worker.service.AsqZatcaInvoiceSubmittToOICServiceHandler" parent="AbstractZatcaOICRestServiceBean">
    <property name="servicePath" value="" />
  </bean> 
  
  <bean id="ZATCA_CERT_GEN_SRV" class="asq.pos.zatca.cert.generation.service.AsqZatcaCertRegistrationServiceHandler" parent="AbstractZatcaRestServiceBean">
    <property name="servicePath" value="/compliance" />
  </bean> 
  
  <bean id="ZATCA_CERT_GEN_INVOICE_SRV" class="asq.pos.zatca.cert.generation.service.AsqZatcaCertRegistrationServiceHandler" parent="AbstractZatcaRestServiceBean">
    <property name="servicePath" value="/compliance/invoices" />
  </bean> 
  
  <bean id="ZATCA_CERT_CSIDS_SRV" class="asq.pos.zatca.cert.generation.service.AsqZatcaCertRegistrationServiceHandler" parent="AbstractZatcaRestServiceBean">
    <property name="servicePath" value="/production/csids" />
  </bean> 
  
  <bean abstract="true" id="AbstractSTCRestServiceBean">
    <property name="serviceId" value="ASQ_STC_REST" />
    <property name="exceptionHandler" ref="standardJaxRsExceptionHandler" />
    <property name="serviceConfigHelper" ref="serviceConfigHelper" />
    <!-- <property name="extensionProviders">
      <list value-type="java.lang.Object">
        <bean class="dtv.servicex.impl.GzipReaderInterceptor" />
        should only be present if using cloud
        <bean class="dtv.servicex.impl.AuthorizationFilter" />
        
      </list>
    </property>
    <property name="gzip" value="true" /> -->
    <property name="logEntity" value="false" />
    <property name="oAuth2" value="false" />
    <property name="username" value="${xcenter.db.user}" />
    <property name="password" value="${xcenter.db.pwd}" />
  </bean> 
  
  <bean id="ASQ_STC_TENDER_REDEEM_SERVICE" class="asq.pos.loyalty.stc.tender.service.AsqSTCloyaltyServiceHandler" parent="AbstractSTCRestServiceBean">
    <property name="servicePath" value="/api/v1/redemption/redeem" />
    <!-- <property name="serviceOTPPath" value="/api/v1/redemption/otp" />
    <property name="serviceRedeemPath" value="/api/v1/redemption/redeem" />
    <property name="serviceRedeemReversePath" value="/api/v1/redemption/reverse" />
    <property name="serviceEarnPath" value="/api/v1/earn/reward" /> -->
	<!--<property name="secretToken" value="addad" />
	<property name="authorization" value="addad" /> -->
  </bean> 
  
  <bean id="ASQ_STC_TENDER_TRIGGER_OTP_SERVICE" class="asq.pos.loyalty.stc.tender.service.AsqSTCloyaltyServiceHandler" parent="AbstractSTCRestServiceBean">
    <property name="servicePath" value="/api/v1/redemption/otp" />
  </bean> 
   <bean id="ASQ_STC_EARN_REWARD_SERVICE" class="asq.pos.loyalty.stc.tender.service.AsqSTCloyaltyServiceHandler" parent="AbstractSTCRestServiceBean">
    <property name="servicePath" value="/api/v1/earn/reward" />
  </bean> 
  
  <bean abstract="true" id="AbstractBnplTamaraRestServiceBean">
    <property name="serviceId" value="TAMARA_REST" />
    <property name="exceptionHandler" ref="standardJaxRsExceptionHandler" />
    <property name="serviceConfigHelper" ref="serviceConfigHelper" />
    <property name="logEntity" value="false" />
    <property name="oAuth2" value="false" />
    <property name="username" value="${asq.bnpl.tender.tamara.username}" />
    <property name="password" value="${asq.bnpl.tender.tamara.password}" />
  </bean> 
  
  <bean id="BNPL_TAMARA_CREATE_SESSION_SRV" class="asq.pos.bnpl.tamara.tender.service.AsqBnplTamaraServiceHandler" parent="AbstractBnplTamaraRestServiceBean">
    <property name="servicePath" value="/checkout/in-store-session" />
  </bean>
  
  
  <!-- Neqaty work Starts -->
  <bean id="asqNeqatyJaxWsHandlerResolver" parent="wsLoggingHandlerResolver">
    <property name="handlers">
      <list value-type="java.xml.ws.handler.Handler" merge="true">
        <bean class="oracle.retail.avs.qas.soap.impl.QASAuthHandler">
          <property name="authTokenName" value="AUTH-TOKEN" />
          <property name="authToken" value="#{systemProperties['asq.neqaty.auth.token']}" />
        </bean>
      </list>
    </property>
  </bean>
  
  <bean id="asqNeqatyJaxWsServicePort" parent="standardJaxWsServicePort">
    <property name="serviceId" value="NEQATY_SRV" />
    <property name="serviceInterface" value="asq.pos.loyalty.neqaty.gen.NeqatyWSAPIPortType" />
    <property name="namespaceUri" value="urn:margento" />
    <property name="serviceName" value="NeqatyWSAPI" />
    <property name="portName" value="NeqatyWSAPI" />
    <property name="handlerResolver" ref="asqNeqatyJaxWsHandlerResolver" />
    <property name="standardBasicAuth" value="false" />
    <!--  property name="lookupServiceOnStartup" value="true" / -->
  </bean>
  
  <bean id="ASQ_NEQATY_SRV" class="asq.pos.loyalty.neqaty.tender.service.AsqNeqatyServiceHandler">
    <property name="serviceId" value="NEQATY_SRV" />
    <property name="servicePort" ref="asqNeqatyJaxWsServicePort" />
    <!-- <property name="exceptionHandler" ref="qasExceptionHandler" />-->
  </bean>
  <!-- Neqaty work ends --> 
  
  <!-- Tamara work Starts -->
  <bean id="BNPL_TAMARA_ORDER_DETAIL_SRV" class="asq.pos.bnpl.tamara.tender.service.AsqBnplTamaraServiceHandler" parent="AbstractBnplTamaraRestServiceBean">
    <property name="servicePath" value="/orders/{order_id}" />
  </bean> 
    <bean id="BNPL_TAMARA_CANCEL_SESSION_SRV" class="asq.pos.bnpl.tamara.tender.service.AsqBnplTamaraServiceHandler" parent="AbstractBnplTamaraRestServiceBean">
    <property name="servicePath" value="/checkout/{checkoutId}/void" />
  </bean> 
     <bean id="BNPL_TAMARA_REFUND_SRV" class="asq.pos.bnpl.tamara.tender.service.AsqBnplTamaraServiceHandler" parent="AbstractBnplTamaraRestServiceBean">
    <property name="servicePath" value="/payments/simplified-refund/{orderId}" />
    </bean> 
   <!-- Tamara work Ends -->

</beans>
  